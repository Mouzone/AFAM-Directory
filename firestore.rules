rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for specific roles
    function hasRequiredRole(allowedRoles) {
      return request.auth != null && 
        request.auth.token.role is string && allowedRoles.hasAny([request.auth.token.role]);
    }

    // Students collection rules
    match /students/{studentId} {
      // Roles with full access to students
      allow create, read, update: if request.auth != null
      allow delete: 
        if hasRequiredRole(["admin", "teacher", "pastor", "deacon"]) || request.auth.token.isWelcomeTeamLeader; 

      // Private student data rules
      match /private/{document=**} {
        allow create: if hasRequiredRole(["student"]);
        allow create, read, update, delete: 
            if hasRequiredRole(["admin", "teacher", "pastor", "deacon"]) || request.auth.token.isWelcomeTeamLeader;
      }

      match /attendance/{document=**} {
        allow create, read, update, delete: 
            if hasRequiredRole(["admin", "teacher", "pastor", "deacon", "student"]) || request.auth.token.isWelcomeTeamLeader
      }
    }

    // Privileges collection rules
    match /privileges/{role} {
      allow read: if request.auth != null;
    }

    // Organization roles rules
    match /organization/roles/{roleId}/{document=**} {
      // Roles with read, update, delete access
      allow read, update, delete: if hasRequiredRole(["admin"]) ||
                                      (hasRequiredRole(["pastor"]) && ["deacon", "teacher", "student"].hasAny([roleId])) || 
                                      (request.auth.token.isWelcomeTeamLeader && roleId == "student");

      // Only admins can create role documents
      allow create: if hasRequiredRole(["admin"]);
    }

    // Pastor roles rules (simplified)
    match /organization/roles/pastor/{document=**} {
      allow read, create, update, delete: if hasRequiredRole(["admin"]);
    }

    // Organization teacher roles rules (simplified)
    match /organization/roles/teacher/{document=**} {
      allow read: if request.auth != null;
    }

    match /temp/{uid} {
        allow read: if request.auth != null && request.auth.uid == uid;
    }

    match /collections/birthdays/data/{document} {
        allow read: if hasRequiredRole(["pastor"]) || request.auth.token.isWelcomeTeamLeader
    }

    match /collections/newcomers/data/{document} {
        allow read: if hasRequiredRole(["pastor"]) || request.auth.token.isWelcomeTeamLeader
    }
  }
}